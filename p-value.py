# -*- coding: utf-8 -*-
"""FAIRE-seq.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13E75HfMYDwG4pacbpuRa3ed3eEPWX8rE
"""

import numpy as np
import pandas as pd
import pyBigWig
import math
import scipy

data = pd.read_csv ('heatmap.tsv', sep = '\t', index_col=0)
data['chr'] = data['ranges'].apply (lambda x: x.split (':')[0])
data['start'] = data['ranges'].apply (lambda x: int (x.split (':')[1].split ('-')[0]))
data['end'] = data['ranges'].apply (lambda x: int (x.split (':')[1].split ('-')[1]))
data['center'] = data['start'] + ((data['end'] - data['start']) / 2)
data['center'] = data['center'].apply (int)

bw = { subset: pyBigWig.open (f'{subset}_FAIRE_nodups_cent_sm.50.RPKM.bw') for subset in ('Control', 'Ecoli', 'Mlut') }

def logfc (x, window, subset):
	chrom = x['chr'][3:]
	start = x['center'] - window
	end = x['center'] + window
	exp = np.max (bw[subset].values (chrom, start, end))
	control = np.max (bw['Control'].values (chrom, start, end))
	try:
		t = exp / control
	except ZeroDivisionError:
		return float ('NaN')
	try:
		return math.log (t)
	except ValueError:
		return float ('NaN')

def stats (x, window, subset):
	chrom = x['chr'][3:]
	start = x['center'] - window
	end = x['center'] + window
	exp = (bw[subset].values (chrom, start, end))
	control = (bw['Control'].values (chrom, start, end))
	t = scipy.stats.mannwhitneyu(exp, control)[1]
	return t


window = 150

for subset in ('Ecoli', 'Mlut'):
	data[f'{subset}_logfc'] = data[['chr', 'center']].apply (lambda x: logfc (x, window, subset), axis = 1)
	data[f'{subset}_pvalue'] = data[['chr', 'center']].apply (lambda x: stats (x, window, subset), axis = 1)

data.to_csv("data.tsv", sep = "\t")
data_filtered = data[data["Ecoli_pvalue"] <= 0.05]
data_filtered = data_filtered[data_filtered["Mlut_pvalue"] <= 0.05]
data_filtered.to_csv("data_filtered.tsv", sep = "\t")

data

data_filtered

